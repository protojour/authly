# This template contains all of the possible sections and their default values

# Note that all fields that take a lint level have these possible values:
# * deny - An error will be produced and the check will fail
# * warn - A warning will be produced, but the check will not fail
# * allow - No warning or error will be produced, though in some cases a note
# will be

# The values provided in this template are the default values that will be used
# when any section or field is not specified in your own configuration

# Root options

# The graph table configures how the dependency graph is constructed and thus
# which crates the checks are performed against
[graph]
targets = []
#exclude = []
all-features = false
no-default-features = false

# The output table provides options for how/if diagnostics are outputted
[output]
feature-depth = 1

# This section is considered when running `cargo deny check advisories`
# More documentation for the advisories section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html
[advisories]
ignore = [
    # FIXME: "paste" is unmaintained:
    "RUSTSEC-2024-0436",
]


# This section is considered when running `cargo deny check licenses`
# More documentation for the licenses section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html
[licenses]
allow = [
    "AGPL-3.0",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "EUPL-1.2",
    "ISC",
    "MIT",
    "MPL-2.0",
    "OpenSSL",
    "Unicode-3.0",
    "Zlib",
]
# The confidence threshold for detecting a license from license text.
# The higher the value, the more closely the license text must be to the
# canonical license text of a valid SPDX license file.
# [possible values: any between 0.0 and 1.0].
confidence-threshold = 0.8
# Allow 1 or more licenses on a per-crate basis, so that particular licenses
# aren't accepted for every possible crate as with the normal allow list
exceptions = []

# Some crates don't have (easily) machine readable licensing information,
# adding a clarification entry for it allows you to manually specify the
# licensing information
[[licenses.clarify]]
# The package spec the clarification applies to
crate = "ring"
expression = "MIT AND ISC AND OpenSSL"
license-files = [{ path = "LICENSE", hash = 0xbd0eed23 }]

[licenses.private]
ignore = false
registries = []

# This section is considered when running `cargo deny check bans`.
# More documentation about the 'bans' section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html
[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "deny"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
# with multiple versions
# * lowest-version - The path to the lowest versioned duplicate is highlighted
# * simplest-path - The path to the version with the fewest edges is highlighted
# * all - Both lowest-version and simplest-path are used
highlight = "all"
# The default lint level for `default` features for crates that are members of
# the workspace that is being checked. This can be overridden by allowing/denying
# `default` on a crate-by-crate basis if desired.
workspace-default-features = "deny"
external-default-features = "allow"
# List of crates that are allowed. Use with care!
allow = []
deny = []

skip = [
    # because of (temporary) git dependency:
    "rcgen",
    # because crypto libraries require older "rand", authly still uses rand 0.8:
    "rand",
    "rand_chacha",
    "rand_core",
    # FIXME: hexhex:
    "fallible-iterator",
    # FIXME: hiqlite/cryptr:
    "bincode",
    # FIXME: webauthn-rs duplicate dependencies
    "asn1-rs",
    "asn1-rs-derive",
    "der-parser",
    "oid-registry",
    "x509-parser",
    # webauthn-rs git dependency:
    "base64urlsafedata",
    # transitive/outdated:
    "bindgen",
    "base64",
    "getrandom",
    "rustc-hash",
    "thiserror",
    "thiserror-impl",
    # tracing:
    "regex-syntax",
    "regex-automata",
    # bindgen:
    "rustix",
    "linux-raw-sys",
    # probably can't help themselves:
    "itertools",
    "windows-sys",
    "windows-targets",
    "windows_aarch64_gnullvm",
    "windows_aarch64_msvc",
    "windows_i686_gnu",
    "windows_i686_gnullvm",
    "windows_i686_msvc",
    "windows_x86_64_gnu",
    "windows_x86_64_gnullvm",
    "windows_x86_64_msvc",
    "wasi",
]

[[bans.features]]
crate = "reqwest"
deny = ["default-tls"]

# Certain crates/versions that will be skipped when doing duplicate detection.

# This section is considered when running `cargo deny check sources`.
# More documentation about the 'sources' section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html
[sources]
unknown-registry = "deny"
unknown-git = "deny"
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
allow-git = [
    "git+https://github.com/protojour/webauthn-rs.git?branch=without-openssl-build-dependency",
    "git+https://github.com/protojour/authly-lib.git",
    "git+https://github.com/sebadob/hiqlite.git",
    "git+https://github.com/rustls/rcgen.git",
]
