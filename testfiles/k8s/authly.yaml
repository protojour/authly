# The authly-test service account:
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: authly-test
  name: authly
automountServiceAccountToken: true
---
# The kubernetes roles given to authly:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: authly-test
  name: authly-role
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "watch", "list", "create", "patch", "update"]
---
# Binds `authly-role` to `authly`:
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: authly-test
  name: authly-role-binding
subjects:
  - kind: ServiceAccount
    name: authly
roleRef:
  kind: Role
  name: authly-role
  apiGroup: rbac.authorization.k8s.io
---
# Basic configuration environment variables:
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: authly-test
  name: authly-config
data:
  AUTHLY_ID: 05f06a77d9a06a7d31c43ad931f1f7669495363df30224f7b129b54f16c3b768
  AUTHLY_K8S: "true"
  AUTHLY_K8S_AUTH_HOSTNAME: authly-k8s
  AUTHLY_K8S_AUTH_SERVER_PORT: "2443"
---
# Secrets for the Authly cluster:
apiVersion: v1
kind: Secret
metadata:
  namespace: authly-test
  name: authly-secrets
stringData:
  AUTHLY_CLUSTER_API_SECRET: ifyougetholdofthisclassifiedpieceofinformationiwillunfortunatelyhavetokillyou
  AUTHLY_CLUSTER_RAFT_SECRET: donttellanybodyabouttheverysecretstring
---
# The Authly API service:
apiVersion: v1
kind: Service
metadata:
  namespace: authly-test
  name: authly
spec:
  selector:
    app: authly
  ports:
    - name: api
      protocol: TCP
      port: 443
      targetPort: 443
---
# The Authly service for k8s authentication:
apiVersion: v1
kind: Service
metadata:
  namespace: authly-test
  name: authly-k8s
spec:
  selector:
    app: authly
  ports:
    - name: k8s-auth-api
      protocol: TCP
      port: 443
      targetPort: 2443
---
# The Authly cluster headless service.
# Only used for Authly pods talking to themselves and other authly pods part of the same Authly cluster:
apiVersion: v1
kind: Service
metadata:
  namespace: authly-test
  name: authly-cluster
spec:
  clusterIP: None
  selector:
    app: authly
  ports:
    - name: cluster-api
      protocol: TCP
      port: 7855
      targetPort: 7855
    - name: cluster-raft
      protocol: TCP
      port: 7856
      targetPort: 7856
---
# The Authly network policy:
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: authly-network-policy
  namespace: authly-test
spec:
  podSelector:
    matchLabels:
      app: authly
  policyTypes:
    - Ingress
  ingress:
    # Open up 443 (authly server port) and 2443 (authly k8s auth port) to every pod:
    - ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 2443
    # Open up the cluster ports to the Authly pod only:
    - ports:
        - protocol: TCP
          port: 7855
        - protocol: TCP
          port: 7856
      from:
        - podSelector:
            matchLabels:
              app: authly
---
# The Authly StatefulSet, which ultimately deploys:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: authly-test
  name: authly
  labels:
    app: authly
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authly
  serviceName: authly-cluster
  template:
    metadata:
      labels:
        app: authly
    spec:
      serviceAccountName: authly
      containers:
        - name: authly-dev
          image: protojour/authly:dev
          command: ["/authly", "serve"]
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 443
            - containerPort: 2443
            - containerPort: 7855
            - containerPort: 7856
          # livenessProbe:
          #   httpGet:
          #     scheme: HTTP
          #     port: 8200
          #     path: /health
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          envFrom:
            - configMapRef:
                name: authly-config
            - secretRef:
                name: authly-secrets
          volumeMounts:
            - mountPath: /var/lib/authly
              name: authly-data
            - mountPath: /etc/authly/cluster
              readOnly: true
              name: authly-cluster-key
            - mountPath: /etc/authly/documents
              readOnly: true
              name: authly-documents
          resources:
            requests:
              memory: 32Mi
              cpu: 100m
      initContainers:
        - name: authly-pal
          image: protojour/authly-pal:dev
          restartPolicy: Always
          env:
            - name: K8S_INSECURE
              value: "true"
      volumes:
        - name: authly-cluster-key
          secret:
            secretName: authly-cluster-key
        - name: authly-documents
          configMap:
            name: authly-documents
  volumeClaimTemplates:
    - metadata:
        name: authly-data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 256Mi
        # In case you want to specify the storage class.
        # You should always(!) prefer local over some replicated abstraction layer.
        # Authly cares about replication itself already.
        #storageClassName: local-path
