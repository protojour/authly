services:
  # Authly Platform Abstraction Layer for secrets
  authly-pal:
    image: protojour/authly-pal:dev
    environment:
      DANGER_ENCRYPTION_DISABLED: 'true'

  # Authly itself
  authly:
    image: protojour/authly:dev
    environment:
      AUTHLY_ID: c865e85720e3c96feabdfe50c33acc75ac2069320de78d0d2c11497b092f1a8c
      AUTHLY_HOSTNAME: authly
      AUTHLY_K8S: 'false'
      AUTHLY_CLUSTER_API_SECRET: ifyougetholdofthisclassifiedpieceofinformationiwillunfortunatelyhavetokillyou
      AUTHLY_CLUSTER_RAFT_SECRET: donttellanybodyabouttheverysecretstring
      AUTHLY_EXPORT_TLS_TO_ETC: 'true'
      AUTHLY_PAL_URL: http://authly-pal:6666
    ports:
      - 1443:443
    volumes:
      - authly-data:/var/lib/authly/data
      - authly-certs:/etc/authly/certs
      - testservice-identity:/etc/authly/service/f3e799137c034e1eb4cd3e4f65705932
      - ../../.local/etc/cluster:/etc/authly/cluster:ro
      - ../../examples:/etc/authly/documents:ro
    command: serve
    healthcheck:
      test: ["CMD", "/authly", "ready"]
      retries: 10
      interval: 2s
    depends_on:
      authly-pal:
        condition: service_started

  # Example service for verifying connection
  testservice:
    image: protojour/authly-testservice:dev
    volumes:
      - authly-certs:/etc/authly/certs:ro
      - testservice-identity:/etc/authly/identity:ro
    depends_on:
      authly:
        condition: service_healthy
        restart: true

volumes:
  authly-data:
  authly-certs:
  testservice-identity:
