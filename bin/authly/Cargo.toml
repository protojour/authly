[package]
name = "authly"
edition = "2021"
publish = false
version.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
rust-version.workspace = true

[lib]
doctest = false

[[bin]]
name = "authly"
path = "src/main.rs"
test = false

[dependencies]
authly-common = { workspace = true, features = [
    "access_token",
    "document",
    "mtls_server",
    "tonic_server",
] }
authly-connect = { path = "../../lib/authly-connect" }
authly-db = { path = "../../lib/authly-db" }
authly-domain = { path = "../../lib/authly-domain" }
authly-hiqlite = { path = "../../lib/authly-hiqlite" }
authly-service = { path = "../../lib/authly-service" }
authly-secrets = { path = "../../lib/authly-secrets" }
authly-web = { path = "../../lib/authly-web" }

aes-gcm-siv = "0.11"
anyhow = "1"
arc-swap = "1.7"
axum = { version = "0.8", features = ["macros"] }
axum-extra = { version = "0.10", features = ["typed-header"] }
blake3 = "1.5"
clap = { version = "4", features = ["derive"] }
figment = { version = "0.10", features = ["env"] }
futures-util = "0.3"
hexhex = "1"
hiqlite.workspace = true
http = "1"
indexmap = "2.7"
indoc = "2"
int-enum = "1"
hostname = "0.4"
hyper = { version = "1", default-features = false }
jsonwebtoken = "9"
k8s-openapi = { version = "0.24.0", features = ["latest"] }
kube = "0.99"
mimalloc = "0.1.43"
num-derive = "0.4"
num-traits = "0.2"
openraft = { version = "0.9", default-features = false }
# webauthn-rs on musl needs openssl/vendored:
openssl = { version = "0.10", features = ["vendored"] }
rand = "0.8"
rcgen.workspace = true
reqwest.workspace = true
# For the "authly" crate only, turn on "debug-embed" so that migrations will work in containers with debug builds.
# I think it's a bug in rust-embed that forcing embed in debug mode can't be done using a macro attribute.
rust-embed = { version = "8", features = ["debug-embed"] }
rustls = { version = "0.23", default-features = false }
secrecy = "0.10"
serde = "1"
serde_cbor_2 = "0.12.0-dev"
serde_json = "1"
strum = { version = "0.27", features = ["derive"] }
time = { version = "0.3", features = ["serde"] }
tokio = { version = "1", features = ["macros", "rt-multi-thread", "signal"] }
tokio-rustls = "0.26"
tokio-util = { version = "0.7", features = ["io"] }
tonic = { version = "0.13", default-features = false, features = ["router"] }
tower = { version = "0.5", features = ["steer"] }
tower-server = { workspace = true, features = ["signal"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "env-filter",
    "fmt",
    "ansi",
] }
uuid = "1"
